mult_shock[j] <- mult_shock[j] + mult_shock[j-i]*alfa[i]
}
}
#print(beta)
# Mult exogenous
for(k in 1:n_ex){
mult_aislado[1, k] <- beta[1, k]
mult_acumulado[1, k] <- beta[1, k]
for(j in 2:mults){
mult_aislado[j, k] <- beta[j, k]
for(i in 1:(j-1)){
mult_aislado[j, k] <- mult_aislado[j, k] + mult_aislado[j-i, k]*alfa[i]
}
mult_acumulado[j, k] <- mult_aislado[j, k] + mult_acumulado[j-1, k]
}
}
colnames(mult_aislado) <- ex_var
colnames(mult_acumulado) <- ex_var
# DATA FRAME
# AISLADO
mult_aislado <- as_tibble(mult_aislado)
mult_aislado <- mutate(mult_aislado, tipo = "isolated", mult = 1:mults)
mult_aislado <- gather(mult_aislado, variable, valor, -tipo, -mult)
# ACUMULADO
mult_acumulado <- as_tibble(mult_acumulado)
mult_acumulado <- mutate(mult_acumulado, tipo = "accumulated", mult = 1:mults)
mult_acumulado <- gather(mult_acumulado, variable, valor, -tipo, -mult)
# FINAL MULT
mult <- bind_rows(mult_aislado, mult_acumulado)
#SHOCK
mult_shock <- as_tibble(list(valor = mult_shock))
mult_shock <- mutate(mult_shock, tipo = "shock", mult = 1:mults)
mult_shock <- map(ex_var, ~mutate(mult_shock, variable = .))
mult_shock <- reduce(mult_shock, bind_rows)
# FINAL
final <- bind_rows(mult, mult_shock)
#print(final)
ggplot(final, aes(mult, valor)) +
geom_line() +
facet_wrap(variable ~ tipo, scales = "free_y") +
ggtitle("Dynamic multipliers") +
xlab("") +
ylab("") +
theme_bw()
}
dynamic_mult(my_model)
source('/media/fede/FEDE/projects/tsr/R/terms.R')
source('/media/fede/FEDE/projects/tsr/R/models.R')
source('/media/fede/FEDE/projects/tsr/R/dynamic-mult.R')
my_model <- dynamic_model(wt ~ mpg + cyl + gear, mtcars, order = c(4,4, 4), type = "mce")
dynamic_mult(my_model)
attr(my_model)
attr(my_model, "type")
attr(my_model, "fitted")
array(0, c(2,3,4))
source('/media/fede/FEDE/projects/tsr/R/models.R')
my_model <- dynamic_model(wt ~ mpg + cyl + gear, mtcars, order = c(4,4, 4), type = "mce")
source('/media/fede/FEDE/projects/tsr/R/models.R')
my_model <- dynamic_model(wt ~ mpg + cyl + gear, mtcars, order = c(4,4, 4), type = "mce")
attr(my_model, "fitted")
mtcars$wt
plot(mtcars$wt)
lines(attr(my_model, "fitted"))
source('/media/fede/FEDE/projects/tsr/R/models.R')
my_model <- dynamic_model(wt ~ mpg + cyl + gear, mtcars, order = c(4,4, 4), type = "mce")
plot(mtcars$wt)
lines(attr(my_model, "fitted"))
source('/media/fede/FEDE/projects/tsr/R/models.R')
my_model <- dynamic_model(wt ~ mpg + cyl + gear, mtcars, order = c(4,4, 4), type = "mce")
plot(mtcars$wt)
lines(attr(my_model, "fitted"))
source('/media/fede/FEDE/projects/tsr/R/models.R')
my_model <- dynamic_model(wt ~ mpg + cyl + gear, mtcars, order = c(4,4, 4), type = "mce")
plot(mtcars$wt)
lines(attr(my_model, "fitted"))
points(attr(my_model, "fitted"), col = "red")
my_model <- dynamic_model(wt ~ mpg + cyl + gear, mtcars, order = c(4,4, 4), type = "mce")
plot(mtcars$wt)
points(attr(my_model, "fitted"), col = "red")
source('/media/fede/FEDE/projects/tsr/R/models.R')
plot(mtcars$wt)
points(attr(my_model, "fitted"), col = "red")
source('/media/fede/FEDE/projects/tsr/R/models.R')
my_model <- dynamic_model(wt ~ mpg + cyl + gear, mtcars, order = c(4,4, 4), type = "mce")
my_model <- dynamic_model(wt ~ mpg + cyl + gear, mtcars, order = c(4,4, 4), type = "mce")
plot(mtcars$wt)
points(attr(my_model, "fitted"), col = "red")
source('/media/fede/FEDE/projects/tsr/R/models.R')
my_model <- dynamic_model(wt ~ mpg + cyl + gear, mtcars, order = c(4,4, 4), type = "mce")
source('/media/fede/FEDE/projects/tsr/R/models.R')
my_model <- dynamic_model(wt ~ mpg + cyl + gear, mtcars, order = c(4,4, 4), type = "mce")
source('/media/fede/FEDE/projects/tsr/R/models.R')
my_model <- dynamic_model(wt ~ mpg + cyl + gear, mtcars, order = c(4,4, 4), type = "mce")
source('/media/fede/FEDE/projects/tsr/R/models.R')
my_model <- dynamic_model(wt ~ mpg + cyl + gear, mtcars, order = c(4,4, 4), type = "mce")
lag(mtcars$mpg)
source('/media/fede/FEDE/projects/tsr/R/models.R')
my_model <- dynamic_model(wt ~ mpg + cyl + gear, mtcars, order = c(4,4, 4), type = "mce")
plot(mtcars$wt)
points(attr(my_model, "fitted"), col = "red")
mtcars$wt
length(mtcars$wt)
length(attr(my_model, "fitted"))
diff(mtcars$wt)
length(diff(mtcars$wt))
mtcars$wt - lag(mtcars$wt)
source('/media/fede/FEDE/projects/tsr/R/models.R')
my_model <- dynamic_model(wt ~ mpg + cyl + gear, mtcars, order = c(4,4, 4), type = "mce")
length(attr(my_model, "fitted"))
length(mtcars$wt)
source('/media/fede/FEDE/projects/tsr/R/models.R')
my_model <- dynamic_model(wt ~ mpg + cyl + gear, mtcars, order = c(4,4, 4), type = "mce")
source('/media/fede/FEDE/projects/tsr/R/models.R')
my_model <- dynamic_model(wt ~ mpg + cyl + gear, mtcars, order = c(4,4, 4), type = "mce")
length(attr(my_model, "fitted"))
length(mtcars$wt)
plot(mtcars$wt)
lines(attr(my_model, "fitted"))
points(attr(my_model, "fitted"), col = "red")
diffinv(attr(my_model, "fitted"))
diffinv(attr(my_model, "fitted"), 0)
diffinv(diff(mtcars$wt), mtcars$wt[!])
diffinv(diff(mtcars$wt), mtcars$wt[1])
mtcars$wt
diffinv(diff(mtcars$wt), mtcars$wt[1], -1)
diffinv(diff(mtcars$wt), mtcars$wt[1], 1)
diff(mtcars$wt)
my_diff <- diff(mtcars$wt)
my_diff
diffinv(my_diff)
mtcars[wt]
mtcars$wwt
mtcars$wt
diffinv(my_diff, mtcars$wt[2])
diffinv(my_diff, xi = mtcars$wt[2])
diffinv(my_diff, xi = mtcars$wt[1])
source('/media/fede/FEDE/projects/tsr/R/models.R')
my_model <- dynamic_model(wt ~ mpg + cyl + gear, mtcars, order = c(4,4, 4), type = "mce")
plot(mtcars$wt)
lines(attr(my_model, "fitted"))
my_model <- dynamic_model(wt ~ mpg + cyl + gear, mtcars, order = c(4,4, 4), type = "mdgd")
plot(mtcars$wt)
lines(attr(my_model, "fitted"))
my_model <- dynamic_model(wt ~ mpg + cyl + gear, mtcars, order = c(4,4, 4), type = "mdg")
plot(mtcars$wt)
lines(attr(my_model, "fitted"))
my_model
update(my_model, ~ . + cyl)
update(my_model,. ~ . + cyl)
update(my_model,. ~ . + cyl, evaluate = T)
update(my_model)
update(my_model)
View(my_model)
forecast::forecast(arima(mtcars$wt), h = 2)
if(NULL) print("hola")
if(length(NULL)) print("hola")
if(length(1)) print("hola")
source('/media/fede/FEDE/projects/tsr/R/models.R')
my_model <- dynamic_model(wt ~ mpg + cyl + gear, mtcars, order = c(4,4, 4), type = "mdg", n_forecast = 4)
source('/media/fede/FEDE/projects/tsr/R/models.R')
my_model <- dynamic_model(wt ~ mpg + cyl + gear, mtcars, order = c(4,4, 4), type = "mdg", n_forecast = 4)
source('/media/fede/FEDE/projects/tsr/R/models.R')
my_model <- dynamic_model(wt ~ mpg + cyl + gear, mtcars, order = c(4,4, 4), type = "mdg", n_forecast = 4)
source('/media/fede/FEDE/projects/tsr/R/models.R')
my_model <- dynamic_model(wt ~ mpg + cyl + gear, mtcars, order = c(4,4, 4), type = "mdg", n_forecast = 4)
globalenv()
source('/media/fede/FEDE/projects/tsr/R/models.R')
my_model <- dynamic_model(wt ~ mpg + cyl + gear, mtcars, order = c(4,4, 4), type = "mdg", n_forecast = 4)
source('/media/fede/FEDE/projects/tsr/R/models.R')
my_model <- dynamic_model(wt ~ mpg + cyl + gear, mtcars, order = c(4,4, 4), type = "mdg", n_forecast = 4)
source('/media/fede/FEDE/projects/tsr/R/models.R')
my_model <- dynamic_model(wt ~ mpg + cyl + gear, mtcars, order = c(4,4, 4), type = "mdg", n_forecast = 4)
source('/media/fede/FEDE/projects/tsr/R/models.R')
my_model <- dynamic_model(wt ~ mpg + cyl + gear, mtcars, order = c(4,4, 4), type = "mdg", n_forecast = 4)
predict(arima(mtcars$wt), 2)
predict(my_model, 2)
my_model
predict(my_model, 2, newxreg = 1:5)
predict(my_model, 2, newxreg = 1:6)
predict(my_model, 2, newxreg = 1:4)
predict(my_model, 2, newxreg = 1:5)
predict(my_model, 2, newxreg = 1:5)
my_model <- dynamic_model(wt ~ mpg + cyl + gear, mtcars, order = c(4,4, 4), type = "mdg")
update(arima(mtcars$wt), . ~. + cyl)
source('/media/fede/FEDE/projects/tsr/R/models.R')
my_model <- dynamic_model(wt ~ mpg + cyl + gear, mtcars, order = c(4,4, 4), type = "mdg")
source('/media/fede/FEDE/projects/tsr/R/models.R')
my_model <- dynamic_model(wt ~ mpg + cyl + gear, mtcars, order = c(4,4, 4), type = "mdg")
rm(new_data)
my_model <- dynamic_model(wt ~ mpg + cyl + gear, mtcars, order = c(4,4, 4), type = "mdg")
attr(my_model, "fit_model")
bind_rows(1:10, 1:11)
bind_rows(x = 1:10, y = 1:11)
bind_rows(mtcars, 1:10)
bind_rows(mtcars, data.frame(1:10))
bind_rows(mtcars, data.frame(new  = 1:10))
bind_cols(mtcars, data.frame(new  = 1:10))
source('/media/fede/FEDE/projects/tsr/R/comparing.R')
update_dyn_model(my_model, mtcars[, "cyl"])
mtcars[, 1]
mtcars[, 1:3]
mtcars[, 3:5]
mtcars[, 5]
mtcars[, 5:6]
mtcars[, c(4, 5)]
mtcars[, c(4, 6)]
update_dyn_model(my_model, mtcars[, c(4, 6)])
source('/media/fede/FEDE/projects/tsr/R/comparing.R')
update_dyn_model(my_model, mtcars[, c(4, 6)])
source('/media/fede/FEDE/projects/tsr/R/comparing.R')
update_dyn_model(my_model, mtcars[, c(4, 6)])
source('/media/fede/FEDE/projects/tsr/R/comparing.R')
my_model <- dynamic_model(wt ~ mpg + cyl + gear, mtcars, order = c(4,4, 4), type = "mdg")
update_dyn_model(my_model, mtcars[, c(4, 6)])
source('/media/fede/FEDE/projects/tsr/R/comparing.R')
update_dyn_model(my_model, mtcars[, c(4, 6)])
source('/media/fede/FEDE/projects/tsr/R/comparing.R')
source('/media/fede/FEDE/projects/tsr/R/comparing.R')
update_dyn_model(my_model, mtcars[, c(4, 6)])
source('/media/fede/FEDE/projects/tsr/R/comparing.R')
update_dyn_model(my_model, mtcars[, c(4, 6)])
source('/media/fede/FEDE/projects/tsr/R/comparing.R')
update_dyn_model(my_model, mtcars[, c(4, 6)])
source('/media/fede/FEDE/projects/tsr/R/comparing.R')
update_dyn_model(my_model, mtcars[, c(4, 6)])
source('/media/fede/FEDE/projects/tsr/R/comparing.R')
update_dyn_model(my_model, mtcars[, c(4, 6)])
source('/media/fede/FEDE/projects/tsr/R/comparing.R')
update_dyn_model(my_model, mtcars[, c(4, 6)])
source('/media/fede/FEDE/projects/tsr/R/comparing.R')
update_dyn_model(my_model, mtcars[, c(4, 6)])
source('/media/fede/FEDE/projects/tsr/R/comparing.R')
update_dyn_model(my_model, mtcars[, c(4, 6)])
source('/media/fede/FEDE/projects/tsr/R/comparing.R')
update_dyn_model(my_model, mtcars[, c(4, 6)])
source('/media/fede/FEDE/projects/tsr/R/comparing.R')
update_dyn_model(my_model, mtcars[, c(4, 6)])
update_dyn_model(my_model, mtcars[, c(4)])
update_dyn_model(my_model, select(mtcars, hp))
select(mtcars, hp)
update_dyn_model(my_model, select(mtcars, hp))
source('/media/fede/FEDE/projects/tsr/R/comparing.R')
update_dyn_model(my_model, select(mtcars, hp))
names(mtcars)
update_dyn_model(my_model, select(mtcars, carb))
models <- map(c("mdg", "mdgd", "mce"), ~dynamic_model(wt ~ mpg + cyl + gear, mtcars, order = c(4,4, 4), type = .))
models
models <- map(c("mdg", "mdgd", "mce"), ~dynamic_model(wt ~ mpg + cyl + gear, mtcars, order = c(4,4, 4), type = .)) %>% set_names(c("mdg", "mdgd", "mce"))
models
models %>% map(reisuals)
models %>% map(residuals)
models %>% map(~tibble(list(error = residuals(.)))
models %>% map(~tibble(list(error = residuals(.))))
models %>% map(~tibble(list(error = residuals(x.))))
models %>% map(~tibble(list(error = residuals(.x))))
models %>% map(~tibble(error = residuals(.x)))
names(list())
names(list("a", b = 1))
models %>% map(~tibble(error = residuals(.x)))
errors <- models %>% map(~tibble(error = residuals(.x)))
errors[["mce"]]
map(c("mdg", "mdgd"), ~update_dyn_model(models[["mce"]], ~errors[[.]]))
models[["mce"]]
map(c("mdg", "mdgd"), ~update_dyn_model(models[["mce"]], errors[[.]]))
source('/media/fede/FEDE/projects/tsr/R/comparing.R')
map(c("mdg", "mdgd"), ~update_dyn_model(models[["mce"]], errors[[.]]))
map(c("mdg", "mdgd"), ~update_dyn_model(models[["mce"]], errors[[.]]))
map(c("mdg", "mdgd"), ~update_dyn_model(models[["mce"]], errors[[.]]))
map(
c("mdg", "mdgd"),
function(other_model){
updated_model <- update_dyn_model(models[["mce"]], errors[[other_model]])
}
)
map(
c("mdg", "mdgd"),
function(other_model){
updated_model <- update_dyn_model(models[["mce"]], errors[[other_model]])
}
)
map(
c("mdg", "mdgd"),
function(other_model){
updated_model <- update_dyn_model(models[["mce"]], errors[[other_model]])
test <- coeftest(updated_model)
test_dfr <- tidy(test)
}
)
map(
c("mdg", "mdgd"),
function(other_model){
updated_model <- update_dyn_model(models[["mce"]], errors[[other_model]])
test <- coeftest(updated_model)
test_dfr <- tidy(test)
test_dfr[term == "error", "statistic"]
}
)
map(
c("mdg", "mdgd"),
function(other_model){
updated_model <- update_dyn_model(models[["mce"]], errors[[other_model]])
test <- coeftest(updated_model)
test_dfr <- tidy(test)
test_dfr[test_dfr$term == "error", "statistic"]
}
)
map_dbl(
c("mdg", "mdgd"),
function(other_model){
updated_model <- update_dyn_model(models[["mce"]], errors[[other_model]])
test <- coeftest(updated_model)
test_dfr <- tidy(test)
test_dfr[test_dfr$term == "error", "statistic"]
}
)
map(
c("mdg", "mdgd"),
function(other_model){
updated_model <- update_dyn_model(models[["mce"]], errors[[other_model]])
test <- coeftest(updated_model)
test_dfr <- tidy(test)
test_dfr[test_dfr$term == "error", "statistic"]
}
)
#UPDATE THE MODEL
update_dyn_model <- function(model, new_dfr){
# new_dfr same size of model data
# ELEMENTOS FOR FITTING
fit_model_elements <- attr(model, "fit_model")
# FIRST ELEMENTS
model_data <- fit_model_elements[["new_data"]]
n_row_dfr <- nrow(new_dfr)
n_row_model <- nrow(model_data)
diff_rows <- n_row_dfr - n_row_model
# print(n_row_dfr)
# print(n_row_model)
# print(diff_rows)
# NEW DATA
sel_new_dfr <- slice(new_dfr, (diff_rows+1):n_row_dfr)
#print(nrow(sel_new_dfr))
new_data <- bind_cols(model_data, sel_new_dfr)
new_main_model <-
paste0(
fit_model_elements[["main_model"]],
" + ",
paste(
colnames(new_dfr),
collapse = " + "
)
)
# REFITTING MODEL
ma_model(
new_main_model,
new_data,
ma_order = fit_model_elements[["ma_terms"]],
complete_data = fit_model_elements[["complete_data"]],
include_mean = fit_model_elements[["include_mean"]]
)
}
compare_dyn_models <- function(list_models){
# LIST MODELS MUSTE BE NAMED
# INITIAL VARS
n_models <- length(list_models)
names_models <- names(list_models)
errors <- map(list_models, ~tibble(error = residuals(.x)))
# MATRIX
comparison_matrix <- matrix(0, n_models, n_models)
colnames(comparison_matrix) <- names_models
rownames(comparison_matrix) <- names_models
for(model in names_models){
other_models <- names_models[names_models != model]
map(
c("mdg", "mdgd"),
function(other_model){
updated_model <- update_dyn_model(models[["mce"]], errors[[other_model]])
test <- coeftest(updated_model)
test_dfr <- tidy(test)
test_dfr[test_dfr$term == "error", "statistic"]
}
)
}
}
map(
c("mdg", "mdgd"),
function(other_model){
updated_model <- update_dyn_model(models[["mce"]], errors[[other_model]])
test <- coeftest(updated_model)
test_dfr <- tidy(test)
test_dfr[test_dfr$term == "error", "statistic"]
}
)
map(
c("mdg", "mdgd"),
function(other_model){
updated_model <- update_dyn_model(models[["mce"]], errors[[other_model]])
test <- coeftest(updated_model)
test_dfr <- tidy(test)
unlist(test_dfr[test_dfr$term == "error", "statistic"])
}
)
map_dbl(
c("mdg", "mdgd"),
function(other_model){
updated_model <- update_dyn_model(models[["mce"]], errors[[other_model]])
test <- coeftest(updated_model)
test_dfr <- tidy(test)
unlist(test_dfr[test_dfr$term == "error", "statistic"])
}
)
map_dbl(
c("mdg", "mdgd"),
function(other_model){
updated_model <- update_dyn_model(models[["mce"]], errors[[other_model]])
test <- coeftest(updated_model)
test_dfr <- tidy(test)
value <- unlist(test_dfr[test_dfr$term == "error", "statistic"])
names(value) <- other_model
}
)
map_dbl(
c("mdg", "mdgd"),
function(other_model){
updated_model <- update_dyn_model(models[["mce"]], errors[[other_model]])
test <- coeftest(updated_model)
test_dfr <- tidy(test)
unlist(test_dfr[test_dfr$term == "error", "statistic"])
}
)
statistics <-
map_dbl(
c("mdg", "mdgd"),
function(other_model){
updated_model <- update_dyn_model(models[["mce"]], errors[[other_model]])
test <- coeftest(updated_model)
test_dfr <- tidy(test)
unlist(test_dfr[test_dfr$term == "error", "statistic"])
}
)
names(statistics)
compare_dyn_models <- function(list_models){
# LIST MODELS MUSTE BE NAMED
# INITIAL VARS
n_models <- length(list_models)
names_models <- names(list_models)
errors <- map(list_models, ~tibble(error = residuals(.x)))
# MATRIX
comparison_matrix <- matrix(0, n_models, n_models)
colnames(comparison_matrix) <- names_models
rownames(comparison_matrix) <- names_models
for(model in names_models){
other_models <- names_models[names_models != model]
# STATISTICS FROM OTHER MODELS
statistics <-
map_dbl(
other_models,
function(other_model){
updated_model <- update_dyn_model(models[[model]], errors[[other_model]])
test <- coeftest(updated_model)
test_dfr <- tidy(test)
unlist(test_dfr[test_dfr$term == "error", "statistic"])
}
)
# RESULT
names(statistics) <- other_models
comparison_matrix[model, other_models] <- statistics
}
comparison_matrix
}
compare_dyn_models(models)
comb(c("mdg", "mdgd", "mce"), 2)
combn(c("mdg", "mdgd", "mce"), 2)
combn(c("mdg", "mdgd", "mce"), 2, simplify = F)
source('/media/fede/FEDE/projects/tsr/R/comparing.R')
compare_dyn_models(models)
source('/media/fede/FEDE/projects/tsr/R/comparing.R')
compare_dyn_models(models)
source('/media/fede/FEDE/projects/tsr/R/comparing.R')
compare_dyn_models(models)
matrix_comp <- compare_dyn_models(models)
attr(matrix_comp, "results")
rm(list = ls())
models <- map(c("mdg", "mdgd", "mce"), ~dynamic_model(wt ~ mpg + cyl + gear, mtcars, order = c(4,4, 4), type = .)) %>% set_names(c("mdg", "mdgd", "mce"))
library(modelr)
library(formula.tools)
library(purrr)
library(dplyr)
library(broom)
library(stringr)
library(readr)
source('/media/fede/FEDE/projects/tsr/R/terms.R')
source('/media/fede/FEDE/projects/tsr/R/models.R')
source('/media/fede/FEDE/projects/tsr/R/dynamic-mult.R')
source('/media/fede/FEDE/projects/tsr/R/comparing.R')
models <- map(c("mdg", "mdgd", "mce"), ~dynamic_model(wt ~ mpg + cyl + gear, mtcars, order = c(4,4, 4), type = .)) %>% set_names(c("mdg", "mdgd", "mce"))
compare_dyn_models(models)
library(tsr)
library(tsr)
library(tsr)
library(tsr)
map(models, residuals)
map(models, ~tibble(error = residuals(.x)))
library(tsr)
library(tsr)
models$mdg
library(tsr)
library(tsr)
library(tsr)
library(tsr)
source('/media/fede/FEDE/projects/tsr/R/comparing.R')
library(tsr)
library(tsr)
library(tsr)
